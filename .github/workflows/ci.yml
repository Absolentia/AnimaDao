name: ci

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:

  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13", "3.14.0-rc.1"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: pipx install uv

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}

      - name: Sync dev deps
        run: uv sync --extra dev

      - name: Ruff (lint)
        run: uv run ruff check .

      - name: Ruff (format check)
        run: uv run ruff format --check .

      - name: AnimaDao gate (declared)
        run: |
          uv run animadao-pre-commit-gate \
            --mode declared \
            --fail-if-outdated \
            --max-unused 0 \
            --ignore pip --ignore setuptools --ignore wheel

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13", "3.14.0-rc.1"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: pipx install uv

      - name: Cache uv global cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}

      - name: Sync deps (dev extras)
        run: uv sync --extra dev

      - name: Run tests
        run: uv run pytest

  install-from-wheel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx install uv
      - run: uv sync --extra dev
      - run: uv run python -m build --sdist --wheel
      - name: Install wheel in clean venv and smoke-test CLI
        run: |
          python -m venv .venv_check
          . .venv_check/bin/activate
          pip install dist/*.whl
          animadao --help

name: ci

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:

  lint:
    runs-on: ubuntu-latest
    strategy: &py-strategy
      fail-fast: false
      matrix:
        include:
          - python-version: "3.8"
          - python-version: "3.9"
          - python-version: "3.10"
          - python-version: "3.11"
          - python-version: "3.12"
          - python-version: "3.13"
          - python-version: "3.14.0-rc.1"
            allow-prereleases: true
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: ${{ matrix.allow-prereleases || false }}

      - name: Install uv
        run: pipx install uv

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}

      - name: Sync dev deps
        run: uv sync --extra dev

      - name: Ruff (lint)
        run: uv run ruff check .

      - name: Ruff (format check)
        run: uv run ruff format --check .

  animadao:
    runs-on: ubuntu-latest
    strategy: *py-strategy
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: pipx install uv

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}

      - name: Sanity â€” show CLI help
        run: uvx --from animadao animadao report --help | sed -n '1,80p'

      - name: AnimaDao (declared)
        uses: Absolentia/animadao-action@v1
        with:
          mode: declared
          src: "animadao tests"
          ignore: pip,setuptools,wheel,ruff
          fail-if-outdated: "true"
          max-unused: "0"
          format: md
          artifact-name: animadao-report-${{ matrix.python-version }}
          python-version: ${{ matrix.python-version }}

  test:
    runs-on: ubuntu-latest
    strategy: *py-strategy
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: pipx install uv

      - name: Cache uv global cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}

      - name: Sync deps (dev extras)
        run: uv sync --extra dev

      - name: Run tests
        run: uv run pytest

  install-from-wheel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx install uv
      - run: uv sync --extra dev
      - run: uv run python -m build --sdist --wheel
      - name: Install wheel in clean venv and smoke-test CLI
        run: |
          python -m venv .venv_check
          . .venv_check/bin/activate
          pip install dist/*.whl
          animadao --help

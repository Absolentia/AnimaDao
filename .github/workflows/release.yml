name: publish
on:
  workflow_run:
    workflows: ["tagger"]
    types: [completed]

permissions:
  contents: read

jobs:
  build-and-publish:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Fetch tags
        run: |
          git fetch --tags --force
      - name: Derive version from pyproject (safety)
        id: ver
        run: |
          python - <<'PY'
          import tomllib,sys
          v=tomllib.load(open("pyproject.toml","rb"))["project"]["version"]
          print(f"::set-output name=version::{v}")
          PY

      - name: Install uv
        run: pipx install uv

      - name: Sync deps
        run: uv sync --extra dev

      - name: Build sdist+wheel
        run: uv run python -m build --sdist --wheel

      - name: Upload to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: uv run twine upload dist/*
